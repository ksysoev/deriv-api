// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"
import "reflect"

// This call gets the financial assessment details of client's account.
type GetFinancialAssessmentResp struct {
	// Echo of the request made.
	EchoReq GetFinancialAssessmentRespEchoReq `json:"echo_req"`

	// Client's financial assessment details
	GetFinancialAssessment *GetFinancialAssessmentRespGetFinancialAssessment `json:"get_financial_assessment,omitempty"`

	// Action name of the request made.
	MsgType GetFinancialAssessmentRespMsgType `json:"msg_type"`

	// Optional field sent in request to map to response, present only when request
	// contains `req_id`.
	ReqId *int `json:"req_id,omitempty"`
}

// Echo of the request made.
type GetFinancialAssessmentRespEchoReq map[string]interface{}

// Client's financial assessment details
type GetFinancialAssessmentRespGetFinancialAssessment struct {
	// CFD Score
	CfdScore *int `json:"cfd_score,omitempty"`

	// Financial Information Score
	FinancialInformationScore *int `json:"financial_information_score,omitempty"`

	// Total Score
	TotalScore *int `json:"total_score,omitempty"`

	// Trading Experience Score
	TradingScore *int `json:"trading_score,omitempty"`
}

type GetFinancialAssessmentRespMsgType string

const GetFinancialAssessmentRespMsgTypeGetFinancialAssessment GetFinancialAssessmentRespMsgType = "get_financial_assessment"

var enumValues_GetFinancialAssessmentRespMsgType = []interface{}{
	"get_financial_assessment",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetFinancialAssessmentRespMsgType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetFinancialAssessmentRespMsgType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetFinancialAssessmentRespMsgType, v)
	}
	*j = GetFinancialAssessmentRespMsgType(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetFinancialAssessmentResp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if _, ok := raw["echo_req"]; raw != nil && !ok {
		return fmt.Errorf("field echo_req in GetFinancialAssessmentResp: required")
	}
	if _, ok := raw["msg_type"]; raw != nil && !ok {
		return fmt.Errorf("field msg_type in GetFinancialAssessmentResp: required")
	}
	type Plain GetFinancialAssessmentResp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = GetFinancialAssessmentResp(plain)
	return nil
}
