// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "fmt"
import "reflect"
import "encoding/json"

// A message with Account Status
type GetAccountStatusResp struct {
	// Echo of the request made.
	EchoReq GetAccountStatusRespEchoReq `json:"echo_req"`

	// Account status details
	GetAccountStatus *GetAccountStatusRespGetAccountStatus `json:"get_account_status,omitempty"`

	// Action name of the request made.
	MsgType GetAccountStatusRespMsgType `json:"msg_type"`

	// Optional field sent in request to map to response, present only when request
	// contains `req_id`.
	ReqId *int `json:"req_id,omitempty"`
}

// Echo of the request made.
type GetAccountStatusRespEchoReq map[string]interface{}

// Account status details
type GetAccountStatusRespGetAccountStatus struct {
	// This represents the authentication status of the user and it includes what
	// authentication is needed.
	Authentication *GetAccountStatusRespGetAccountStatusAuthentication `json:"authentication,omitempty"`

	// Contains missing profile fields required for cashier access.
	CashierMissingFields []string `json:"cashier_missing_fields,omitempty"`

	// If the cashier is unavailble, this array contains one or more error codes for
	// each reason.
	CashierValidation []string `json:"cashier_validation,omitempty"`

	// Provides cashier details for client currency.
	CurrencyConfig GetAccountStatusRespGetAccountStatusCurrencyConfig `json:"currency_config"`

	// Current P2P status of client.
	P2PStatus GetAccountStatusRespGetAccountStatusP2PStatus `json:"p2p_status"`

	// Indicates whether the client should be prompted to authenticate their account.
	PromptClientToAuthenticate GetAccountStatusRespGetAccountStatusPromptClientToAuthenticate `json:"prompt_client_to_authenticate"`

	// Client risk classification: `low`, `standard`, `high`.
	RiskClassification string `json:"risk_classification"`

	// Social identity provider a user signed up with.
	SocialIdentityProvider *GetAccountStatusRespGetAccountStatusSocialIdentityProvider `json:"social_identity_provider,omitempty"`

	// Account status. Possible status:
	// - `address_verified`: client's address is verified by third party services.
	// - `allow_document_upload`: client is allowed to upload documents.
	// - `age_verification`: client is age-verified.
	// - `authenticated`: client is fully authenticated.
	// - `cashier_locked`: cashier is locked.
	// - `crs_tin_information`: client has updated tax related information.
	// - `deposit_locked`: deposit is not allowed.
	// - `disabled`: account is disabled.
	// - `document_expired`: client's submitted proof-of-identity documents have
	// expired.
	// - `document_expiring_soon`: client's submitted proof-of-identity documents are
	// expiring within a month.
	// - `dxtrade_password_not_set`: Deriv X password is not set.
	// - `financial_assessment_not_complete`: client should complete their financial
	// assessment.
	// - `financial_information_not_complete`: client has not completed financial
	// assessment.
	// - `financial_risk_approval`: client has accepted financial risk disclosure.
	// - `max_turnover_limit_not_set`: client has not set financial limits on their
	// account. Applies to UK and Malta clients.
	// - `mt5_password_not_set`: MT5 password is not set.
	// - `mt5_withdrawal_locked`: MT5 deposits allowed, but withdrawal is not allowed.
	// - `needs_affiliate_coc_approval`: user must approve the Affiliate's Code of
	// Conduct Agreement.
	// - `no_trading`: trading is disabled.
	// - `no_withdrawal_or_trading`: client cannot trade or withdraw but can deposit.
	// - `p2p_blocked_for_pa`: p2p is blocked for the current payment agent client.
	// - `pa_withdrawal_explicitly_allowed`: withdrawal through payment agent is
	// allowed.
	// - `password_reset_required`: this client must reset their password.
	// - `professional`: this client has opted for a professional account.
	// - `professional_requested`: this client has requested for a professional
	// account.
	// - `professional_rejected`: this client's request for a professional account has
	// been rejected.
	// - `social_signup`: this client is using social signup.
	// - `trading_experience_not_complete`: client has not completed the trading
	// experience questionnaire.
	// - `ukgc_funds_protection`: client has acknowledged UKGC funds protection
	// notice.
	// - `unwelcome`: client cannot deposit or buy contracts, but can withdraw or sell
	// contracts.
	// - `withdrawal_locked`: deposits allowed but withdrawals are not allowed.
	// - `deposit_attempt`: this prevent a client from changing the account currency
	// after deposit attempt.
	// - `poi_name_mismatch`: client POI documents name mismatch.
	// - `allow_poa_resubmission`: the client can resubmit POA documents.
	// - `allow_poi_resubmission`: the client can resubmit POI documents.
	// - `shared_payment_method`: the client has been sharing payment methods.
	// - `personal_details_locked`: client is not allowed to edit personal profile
	// details.
	// - `transfers_blocked`: it block any transfer between two accounts.
	// - `df_deposit_requires_poi`: the DF deposit will be blocked until the client
	// gets age verified.
	// - `authenticated_with_idv_photoid`: the client has been fully authenticated by
	// IDV.
	// - `idv_revoked`: the client used to be fully authenticated by IDV but it was
	// taken away due to compliance criteria.
	// - `mt5_additional_kyc_required`: client tax information, place of birth and
	// account opening reason is missing
	Status []string `json:"status"`
}

// This represents the authentication status of the user and it includes what
// authentication is needed.
type GetAccountStatusRespGetAccountStatusAuthentication struct {
	// POI attempts made by the client
	Attempts *GetAccountStatusRespGetAccountStatusAuthenticationAttempts `json:"attempts,omitempty"`

	// The authentication status for document.
	Document *GetAccountStatusRespGetAccountStatusAuthenticationDocument `json:"document,omitempty"`

	// The authentication status for identity.
	Identity *GetAccountStatusRespGetAccountStatusAuthenticationIdentity `json:"identity,omitempty"`

	// The authentication status for source of income document.
	Income *GetAccountStatusRespGetAccountStatusAuthenticationIncome `json:"income,omitempty"`

	// An array containing the list of required authentication.
	NeedsVerification []string `json:"needs_verification"`

	// The current state of the proof of ownership.
	Ownership *GetAccountStatusRespGetAccountStatusAuthenticationOwnership `json:"ownership,omitempty"`
}

// POI attempts made by the client
type GetAccountStatusRespGetAccountStatusAuthenticationAttempts struct {
	// A number of POI attempts made by the client
	Count *int `json:"count,omitempty"`

	// A list of POI attempts made by the client in chronological descending order
	History []GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElem `json:"history,omitempty"`

	// The latest POI attempt made by the client
	Latest interface{} `json:"latest,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElem struct {
	// 2-letter country code used to request the attempt.
	CountryCode *string `json:"country_code,omitempty"`

	// The document type of the attempt.
	DocumentType *string `json:"document_type,omitempty"`

	// The id of the attempt.
	Id *string `json:"id,omitempty"`

	// The service used to make the verification.
	Service *string `json:"service,omitempty"`

	// Status of the attempt.
	Status *GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus `json:"status,omitempty"`

	// The epoch of the attempt.
	Timestamp *int `json:"timestamp,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatusExpired GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus = "expired"
const GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatusNone GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatusPending GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus = "verified"

// The authentication status for document.
type GetAccountStatusRespGetAccountStatusAuthenticationDocument struct {
	// This is the epoch of the document expiry date.
	ExpiryDate *int `json:"expiry_date,omitempty"`

	// This represents the current status of the proof of address document submitted
	// for authentication.
	Status *GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus `json:"status,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatusExpired GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus = "expired"
const GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatusNone GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatusPending GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatusSuspected GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus = "suspected"
const GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus = "verified"

// The authentication status for identity.
type GetAccountStatusRespGetAccountStatusAuthenticationIdentity struct {
	// This is the epoch of the document expiry date.
	ExpiryDate *int `json:"expiry_date,omitempty"`

	// This shows the information about the authentication services implemented
	Services *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServices `json:"services,omitempty"`

	// This represent the current status for proof of identity document submitted for
	// authentication.
	Status *GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus `json:"status,omitempty"`
}

// This shows the information about the authentication services implemented
type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServices struct {
	// This shows the information related to IDV supported services
	Idv *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdv `json:"idv,omitempty"`

	// This shows the information related to the manual POI checks
	Manual *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManual `json:"manual,omitempty"`

	// This shows the information related to Onfido supported services
	Onfido *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfido `json:"onfido,omitempty"`
}

// This shows the information related to IDV supported services
type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdv struct {
	// This is the epoch of the document expiry date.
	ExpiryDate *int `json:"expiry_date,omitempty"`

	// Show the last IDV reported reasons for the rejected cases
	LastRejected []string `json:"last_rejected,omitempty"`

	// Shows the latest document properties detected and reported by IDVS
	ReportedProperties GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvReportedProperties `json:"reported_properties,omitempty"`

	// This represents the status of the latest IDV check.
	Status *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus `json:"status,omitempty"`

	// This shows the number of IDV submissions left for the client
	SubmissionsLeft *int `json:"submissions_left,omitempty"`
}

// Shows the latest document properties detected and reported by IDVS
type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvReportedProperties map[string]interface{}

type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatusExpired GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus = "expired"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatusNone GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatusPending GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus = "verified"

// This shows the information related to the manual POI checks
type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManual struct {
	// This represents the status of the current manual POI check.
	Status *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus `json:"status,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatusExpired GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus = "expired"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatusNone GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatusPending GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatusSuspected GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus = "suspected"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus = "verified"

// This shows the information related to Onfido supported services
type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfido struct {
	// 3 letter country code for Onfide SDK
	CountryCode *string `json:"country_code,omitempty"`

	// This shows the list of documents types supported by Onfido
	Documents []string `json:"documents,omitempty"`

	// This shows the list of documents types supported.
	DocumentsSupported []string `json:"documents_supported,omitempty"`

	// This shows the information if the country is supported by Onfido
	IsCountrySupported *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoIsCountrySupported `json:"is_country_supported,omitempty"`

	// Show the last Onfido reported reasons for the rejected cases
	LastRejected []string `json:"last_rejected,omitempty"`

	// Shows the latest document properties detected and reported by Onfido
	ReportedProperties GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoReportedProperties `json:"reported_properties,omitempty"`

	// This represents the status of the latest Onfido check.
	Status *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus `json:"status,omitempty"`

	// This shows the number of Onfido submissions left for the client
	SubmissionsLeft *int `json:"submissions_left,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoIsCountrySupported int

// Shows the latest document properties detected and reported by Onfido
type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoReportedProperties map[string]interface{}

type GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatusExpired GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus = "expired"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatusNone GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatusPending GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatusSuspected GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus = "suspected"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus = "verified"

type GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatusExpired GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus = "expired"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatusNone GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatusPending GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatusSuspected GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus = "suspected"
const GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus = "verified"

// The authentication status for source of income document.
type GetAccountStatusRespGetAccountStatusAuthenticationIncome struct {
	// Epoch of the source of income document expiry date.
	ExpiryDate *int `json:"expiry_date,omitempty"`

	// Current status of the proof of income document submitted for authentication.
	Status *GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus `json:"status,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatusLocked GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus = "locked"
const GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatusNone GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatusPending GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus = "verified"

// The current state of the proof of ownership.
type GetAccountStatusRespGetAccountStatusAuthenticationOwnership struct {
	// The list of proof of ownership requests to fullfil
	Requests []GetAccountStatusRespGetAccountStatusAuthenticationOwnershipRequestsElem `json:"requests,omitempty"`

	// This represents the current status of the proof of ownership
	Status *GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus `json:"status,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationOwnershipRequestsElem struct {
	// The request timestamp of creation
	CreationTime *string `json:"creation_time,omitempty"`

	// Number of documents required to be uploaded for proof of ownership
	DocumentsRequired *float64 `json:"documents_required,omitempty"`

	// The identifier of the proof of ownership request
	Id *float64 `json:"id,omitempty"`

	// The display name of the payment method being requested
	PaymentMethod *string `json:"payment_method,omitempty"`
}

type GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus string

const GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatusNone GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus = "none"
const GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatusPending GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus = "pending"
const GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatusRejected GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus = "rejected"
const GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatusVerified GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus = "verified"

// Provides cashier details for client currency.
type GetAccountStatusRespGetAccountStatusCurrencyConfig map[string]interface{}

type GetAccountStatusRespGetAccountStatusP2PStatus string

const GetAccountStatusRespGetAccountStatusP2PStatusActive GetAccountStatusRespGetAccountStatusP2PStatus = "active"
const GetAccountStatusRespGetAccountStatusP2PStatusNone GetAccountStatusRespGetAccountStatusP2PStatus = "none"
const GetAccountStatusRespGetAccountStatusP2PStatusPermBan GetAccountStatusRespGetAccountStatusP2PStatus = "perm_ban"
const GetAccountStatusRespGetAccountStatusP2PStatusTempBan GetAccountStatusRespGetAccountStatusP2PStatus = "temp_ban"

type GetAccountStatusRespGetAccountStatusPromptClientToAuthenticate int

type GetAccountStatusRespGetAccountStatusSocialIdentityProvider string

const GetAccountStatusRespGetAccountStatusSocialIdentityProviderApple GetAccountStatusRespGetAccountStatusSocialIdentityProvider = "apple"
const GetAccountStatusRespGetAccountStatusSocialIdentityProviderFacebook GetAccountStatusRespGetAccountStatusSocialIdentityProvider = "facebook"
const GetAccountStatusRespGetAccountStatusSocialIdentityProviderGoogle GetAccountStatusRespGetAccountStatusSocialIdentityProvider = "google"

type GetAccountStatusRespMsgType string

const GetAccountStatusRespMsgTypeGetAccountStatus GetAccountStatusRespMsgType = "get_account_status"

var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus = []interface{}{
	"verified",
	"rejected",
	"pending",
	"expired",
	"none",
}
var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus = []interface{}{
	"none",
	"pending",
	"rejected",
	"verified",
	"expired",
	"suspected",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusPromptClientToAuthenticate) UnmarshalJSON(b []byte) error {
	var v int
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusPromptClientToAuthenticate {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusPromptClientToAuthenticate, v)
	}
	*j = GetAccountStatusRespGetAccountStatusPromptClientToAuthenticate(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthentication) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["needs_verification"]; !ok || v == nil {
		return fmt.Errorf("field needs_verification: required")
	}
	type Plain GetAccountStatusRespGetAccountStatusAuthentication
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = GetAccountStatusRespGetAccountStatusAuthentication(plain)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus(v)
	return nil
}

var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoStatus = []interface{}{
	"none",
	"pending",
	"rejected",
	"verified",
	"expired",
	"suspected",
}
var enumValues_GetAccountStatusRespGetAccountStatusP2PStatus = []interface{}{
	"none",
	"active",
	"temp_ban",
	"perm_ban",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusP2PStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusP2PStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusP2PStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusP2PStatus(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoIsCountrySupported) UnmarshalJSON(b []byte) error {
	var v int
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoIsCountrySupported {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoIsCountrySupported, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoIsCountrySupported(v)
	return nil
}

var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesOnfidoIsCountrySupported = []interface{}{
	1,
	0,
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus(v)
	return nil
}

var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesManualStatus = []interface{}{
	"none",
	"pending",
	"rejected",
	"verified",
	"expired",
	"suspected",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus(v)
	return nil
}

var enumValues_GetAccountStatusRespGetAccountStatusPromptClientToAuthenticate = []interface{}{
	1,
	0,
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus(v)
	return nil
}

var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityServicesIdvStatus = []interface{}{
	"none",
	"pending",
	"rejected",
	"verified",
	"expired",
}
var enumValues_GetAccountStatusRespGetAccountStatusSocialIdentityProvider = []interface{}{
	"google",
	"facebook",
	"apple",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusSocialIdentityProvider) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusSocialIdentityProvider {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusSocialIdentityProvider, v)
	}
	*j = GetAccountStatusRespGetAccountStatusSocialIdentityProvider(v)
	return nil
}

var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus = []interface{}{
	"none",
	"pending",
	"rejected",
	"verified",
	"expired",
	"suspected",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationIdentityStatus(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationDocumentStatus(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationAttemptsHistoryElemStatus(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatus) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["currency_config"]; !ok || v == nil {
		return fmt.Errorf("field currency_config: required")
	}
	if v, ok := raw["p2p_status"]; !ok || v == nil {
		return fmt.Errorf("field p2p_status: required")
	}
	if v, ok := raw["prompt_client_to_authenticate"]; !ok || v == nil {
		return fmt.Errorf("field prompt_client_to_authenticate: required")
	}
	if v, ok := raw["risk_classification"]; !ok || v == nil {
		return fmt.Errorf("field risk_classification: required")
	}
	if v, ok := raw["status"]; !ok || v == nil {
		return fmt.Errorf("field status: required")
	}
	type Plain GetAccountStatusRespGetAccountStatus
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = GetAccountStatusRespGetAccountStatus(plain)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus, v)
	}
	*j = GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus(v)
	return nil
}

var enumValues_GetAccountStatusRespMsgType = []interface{}{
	"get_account_status",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusRespMsgType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetAccountStatusRespMsgType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetAccountStatusRespMsgType, v)
	}
	*j = GetAccountStatusRespMsgType(v)
	return nil
}

var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationOwnershipStatus = []interface{}{
	"none",
	"pending",
	"rejected",
	"verified",
}
var enumValues_GetAccountStatusRespGetAccountStatusAuthenticationIncomeStatus = []interface{}{
	"none",
	"pending",
	"rejected",
	"verified",
	"locked",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetAccountStatusResp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["echo_req"]; !ok || v == nil {
		return fmt.Errorf("field echo_req: required")
	}
	if v, ok := raw["msg_type"]; !ok || v == nil {
		return fmt.Errorf("field msg_type: required")
	}
	type Plain GetAccountStatusResp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = GetAccountStatusResp(plain)
	return nil
}
