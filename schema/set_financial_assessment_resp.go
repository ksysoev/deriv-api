// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"
import "reflect"

// Echo of the request made.
type SetFinancialAssessmentRespEchoReq map[string]interface{}

type SetFinancialAssessmentRespMsgType string

var enumValues_SetFinancialAssessmentRespMsgType = []interface{}{
	"set_financial_assessment",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *SetFinancialAssessmentRespMsgType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_SetFinancialAssessmentRespMsgType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_SetFinancialAssessmentRespMsgType, v)
	}
	*j = SetFinancialAssessmentRespMsgType(v)
	return nil
}

// Set Financial Assessment Receive
type SetFinancialAssessmentResp struct {
	// Echo of the request made.
	EchoReq SetFinancialAssessmentRespEchoReq `json:"echo_req"`

	// Action name of the request made.
	MsgType SetFinancialAssessmentRespMsgType `json:"msg_type"`

	// Optional field sent in request to map to response, present only when request
	// contains `req_id`.
	ReqId *int `json:"req_id,omitempty"`

	// The financial assessment score assigned to the submitted financial assessment
	SetFinancialAssessment *SetFinancialAssessmentRespSetFinancialAssessment `json:"set_financial_assessment,omitempty"`
}

const SetFinancialAssessmentRespMsgTypeSetFinancialAssessment SetFinancialAssessmentRespMsgType = "set_financial_assessment"

// The financial assessment score assigned to the submitted financial assessment
type SetFinancialAssessmentRespSetFinancialAssessment struct {
	// CFD score based on answers
	CfdScore *int `json:"cfd_score,omitempty"`

	// Financial information score based on answers
	FinancialInformationScore *int `json:"financial_information_score,omitempty"`

	// Financial Assessment score based on answers
	TotalScore *int `json:"total_score,omitempty"`

	// Trading experience score based on answers
	TradingScore *int `json:"trading_score,omitempty"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *SetFinancialAssessmentResp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["echo_req"]; !ok || v == nil {
		return fmt.Errorf("field echo_req in SetFinancialAssessmentResp: required")
	}
	if v, ok := raw["msg_type"]; !ok || v == nil {
		return fmt.Errorf("field msg_type in SetFinancialAssessmentResp: required")
	}
	type Plain SetFinancialAssessmentResp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = SetFinancialAssessmentResp(plain)
	return nil
}
