// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"
import "reflect"

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field.
type TinValidationsPassthrough map[string]interface{}

type TinValidationsTinValidations int

var enumValues_TinValidationsTinValidations = []interface{}{
	1,
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *TinValidationsTinValidations) UnmarshalJSON(b []byte) error {
	var v int
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_TinValidationsTinValidations {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_TinValidationsTinValidations, v)
	}
	*j = TinValidationsTinValidations(v)
	return nil
}

// Get the validations for Tax Identification Numbers (TIN)
type TinValidations struct {
	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field.
	Passthrough TinValidationsPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`

	// The tax residence selected by the client.
	TaxResidence string `json:"tax_residence"`

	// Must be `1`
	TinValidations TinValidationsTinValidations `json:"tin_validations"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *TinValidations) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["tax_residence"]; !ok || v == nil {
		return fmt.Errorf("field tax_residence in TinValidations: required")
	}
	if v, ok := raw["tin_validations"]; !ok || v == nil {
		return fmt.Errorf("field tin_validations in TinValidations: required")
	}
	type Plain TinValidations
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = TinValidations(plain)
	return nil
}
