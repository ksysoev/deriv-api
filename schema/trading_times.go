// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "fmt"
import "encoding/json"

// Receive a list of market opening times for a given date.
type TradingTimes struct {
	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field. Maximum size is 3500 bytes.
	Passthrough TradingTimesPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`

	// Date to receive market opening times for. (`yyyy-mm-dd` format. `today` can
	// also be specified).
	TradingTimes string `json:"trading_times"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field. Maximum size is 3500 bytes.
type TradingTimesPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *TradingTimes) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["trading_times"]; !ok || v == nil {
		return fmt.Errorf("field trading_times: required")
	}
	type Plain TradingTimes
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = TradingTimes(plain)
	return nil
}
