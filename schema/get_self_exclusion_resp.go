// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"
import "reflect"

// A message with User Self-Exclusion
type GetSelfExclusionResp struct {
	// Echo of the request made.
	EchoReq GetSelfExclusionRespEchoReq `json:"echo_req"`

	// List of values set for self exclusion.
	GetSelfExclusion *GetSelfExclusionRespGetSelfExclusion `json:"get_self_exclusion,omitempty"`

	// Action name of the request made.
	MsgType GetSelfExclusionRespMsgType `json:"msg_type"`

	// Optional field sent in request to map to response, present only when request
	// contains `req_id`.
	ReqId *int `json:"req_id,omitempty"`
}

// Echo of the request made.
type GetSelfExclusionRespEchoReq map[string]interface{}

// List of values set for self exclusion.
type GetSelfExclusionRespGetSelfExclusion struct {
	// Exclude me from the website (for a minimum of 6 months, up to a maximum of 5
	// years). Note: uplifting this self-exclusion may require contacting the company.
	ExcludeUntil *string `json:"exclude_until,omitempty"`

	// 30-day limit on deposits
	Max30DayDeposit *float64 `json:"max_30day_deposit,omitempty"`

	// 30-day limit on losses
	Max30DayLosses *float64 `json:"max_30day_losses,omitempty"`

	// 30-day turnover limit
	Max30DayTurnover *float64 `json:"max_30day_turnover,omitempty"`

	// 7-day limit on deposits
	Max7DayDeposit *float64 `json:"max_7day_deposit,omitempty"`

	// 7-day limit on losses
	Max7DayLosses *float64 `json:"max_7day_losses,omitempty"`

	// 7-day turnover limit
	Max7DayTurnover *float64 `json:"max_7day_turnover,omitempty"`

	// Maximum account cash balance
	MaxBalance *float64 `json:"max_balance,omitempty"`

	// Daily limit on deposits
	MaxDeposit *float64 `json:"max_deposit,omitempty"`

	// Daily limit on losses
	MaxLosses *float64 `json:"max_losses,omitempty"`

	// Maximum number of open positions
	MaxOpenBets *int `json:"max_open_bets,omitempty"`

	// Daily turnover limit
	MaxTurnover *float64 `json:"max_turnover,omitempty"`

	// Session duration limit, in minutes
	SessionDurationLimit *int `json:"session_duration_limit,omitempty"`

	// Exclude me from the website (for up to 6 weeks). The time is in epoch format.
	// Note: unlike `exclude_until`, this self-exclusion will be lifted automatically
	// at the expiry of the timeout period.
	TimeoutUntil *int `json:"timeout_until,omitempty"`
}

type GetSelfExclusionRespMsgType string

const GetSelfExclusionRespMsgTypeGetSelfExclusion GetSelfExclusionRespMsgType = "get_self_exclusion"

var enumValues_GetSelfExclusionRespMsgType = []interface{}{
	"get_self_exclusion",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetSelfExclusionRespMsgType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_GetSelfExclusionRespMsgType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_GetSelfExclusionRespMsgType, v)
	}
	*j = GetSelfExclusionRespMsgType(v)
	return nil
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *GetSelfExclusionResp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if _, ok := raw["echo_req"]; raw != nil && !ok {
		return fmt.Errorf("field echo_req in GetSelfExclusionResp: required")
	}
	if _, ok := raw["msg_type"]; raw != nil && !ok {
		return fmt.Errorf("field msg_type in GetSelfExclusionResp: required")
	}
	type Plain GetSelfExclusionResp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = GetSelfExclusionResp(plain)
	return nil
}
