// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "fmt"
import "encoding/json"

// Used for revoking access of particular app.
type RevokeOauthApp struct {
	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field. Maximum size is 3500 bytes.
	Passthrough RevokeOauthAppPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`

	// The application ID to revoke.
	RevokeOauthApp int `json:"revoke_oauth_app"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field. Maximum size is 3500 bytes.
type RevokeOauthAppPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *RevokeOauthApp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["revoke_oauth_app"]; !ok || v == nil {
		return fmt.Errorf("field revoke_oauth_app: required")
	}
	type Plain RevokeOauthApp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = RevokeOauthApp(plain)
	return nil
}
