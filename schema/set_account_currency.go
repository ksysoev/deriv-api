// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "fmt"
import "encoding/json"

// Set account currency, this will be default currency for your account i.e
// currency for trading, deposit. Please note that account currency can only be set
// once, and then can never be changed.
type SetAccountCurrency struct {
	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field.
	Passthrough SetAccountCurrencyPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`

	// Currency of the account. List of supported currencies can be acquired with
	// `payout_currencies` call.
	SetAccountCurrency string `json:"set_account_currency"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field.
type SetAccountCurrencyPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *SetAccountCurrency) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["set_account_currency"]; !ok || v == nil {
		return fmt.Errorf("field set_account_currency: required")
	}
	type Plain SetAccountCurrency
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = SetAccountCurrency(plain)
	return nil
}
