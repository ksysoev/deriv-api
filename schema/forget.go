// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"

// Immediately cancel the real-time stream of messages with a specific ID.
type Forget struct {
	// ID of the real-time stream of messages to cancel.
	Forget string `json:"forget"`

	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field. Maximum size is 3500 bytes.
	Passthrough ForgetPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field. Maximum size is 3500 bytes.
type ForgetPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Forget) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["forget"]; !ok || v == nil {
		return fmt.Errorf("field forget in Forget: required")
	}
	type Plain Forget
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = Forget(plain)
	return nil
}
