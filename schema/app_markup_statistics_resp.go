// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "fmt"
import "reflect"
import "encoding/json"

// App Markup transaction statistics
type AppMarkupStatisticsRespAppMarkupStatistics struct {
	// Array of summed app markups grouped by app_id
	Breakdown []AppMarkupStatisticsRespAppMarkupStatisticsBreakdownElem `json:"breakdown,omitempty"`

	// The sum of markup the client paid in USD
	TotalAppMarkupUsd *float64 `json:"total_app_markup_usd,omitempty"`

	// The total count of transactions
	TotalTransactionsCount *float64 `json:"total_transactions_count,omitempty"`
}

type AppMarkupStatisticsRespAppMarkupStatisticsBreakdownElem struct {
	// ID of the application where this contract was purchased.
	AppId *int `json:"app_id,omitempty"`

	// The sum of markup the client paid in USD
	AppMarkupUsd *float64 `json:"app_markup_usd,omitempty"`

	// The sum of markup the client paid in developer's currency
	AppMarkupValue *float64 `json:"app_markup_value,omitempty"`

	// Currency code of the app developer
	DevCurrcode *string `json:"dev_currcode,omitempty"`

	// The count of app transactions
	TransactionsCount *float64 `json:"transactions_count,omitempty"`
}

// Echo of the request made.
type AppMarkupStatisticsRespEchoReq map[string]interface{}

type AppMarkupStatisticsRespMsgType string

var enumValues_AppMarkupStatisticsRespMsgType = []interface{}{
	"app_markup_statistics",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *AppMarkupStatisticsRespMsgType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_AppMarkupStatisticsRespMsgType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_AppMarkupStatisticsRespMsgType, v)
	}
	*j = AppMarkupStatisticsRespMsgType(v)
	return nil
}

// Per application reporting of app_markup
type AppMarkupStatisticsResp struct {
	// App Markup transaction statistics
	AppMarkupStatistics *AppMarkupStatisticsRespAppMarkupStatistics `json:"app_markup_statistics,omitempty"`

	// Echo of the request made.
	EchoReq AppMarkupStatisticsRespEchoReq `json:"echo_req"`

	// Action name of the request made.
	MsgType AppMarkupStatisticsRespMsgType `json:"msg_type"`

	// Optional field sent in request to map to response, present only when request
	// contains `req_id`.
	ReqId *int `json:"req_id,omitempty"`
}

const AppMarkupStatisticsRespMsgTypeAppMarkupStatistics AppMarkupStatisticsRespMsgType = "app_markup_statistics"

// UnmarshalJSON implements json.Unmarshaler.
func (j *AppMarkupStatisticsResp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["echo_req"]; !ok || v == nil {
		return fmt.Errorf("field echo_req: required")
	}
	if v, ok := raw["msg_type"]; !ok || v == nil {
		return fmt.Errorf("field msg_type: required")
	}
	type Plain AppMarkupStatisticsResp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = AppMarkupStatisticsResp(plain)
	return nil
}
