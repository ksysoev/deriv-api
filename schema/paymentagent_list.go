// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"

// Will return a list of Payment Agents for a given country for a given currency.
// Payment agents allow users to deposit and withdraw funds using local payment
// methods that might not be available via the main website's cashier system.
type PaymentagentList struct {
	// [Optional] If specified, only payment agents that supports that currency will
	// be returned (obtained from `payout_currencies` call).
	Currency *string `json:"currency,omitempty"`

	// [Optional] The login id of the user. Mandatory when multiple tokens were
	// provided during authorize.
	Loginid *string `json:"loginid,omitempty"`

	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field.
	Passthrough PaymentagentListPassthrough `json:"passthrough,omitempty"`

	// Client's 2-letter country code (obtained from `residence_list` call).
	PaymentagentList string `json:"paymentagent_list"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field.
type PaymentagentListPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *PaymentagentList) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["paymentagent_list"]; !ok || v == nil {
		return fmt.Errorf("field paymentagent_list in PaymentagentList: required")
	}
	type Plain PaymentagentList
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = PaymentagentList(plain)
	return nil
}
