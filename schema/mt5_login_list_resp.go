// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"
import "reflect"

// Get list of MT5 accounts for client.
type Mt5LoginListResp struct {
	// Echo of the request made.
	EchoReq Mt5LoginListRespEchoReq `json:"echo_req"`

	// Action name of the request made.
	MsgType Mt5LoginListRespMsgType `json:"msg_type"`

	// Array containing MT5 account objects.
	Mt5LoginList []Mt5LoginListRespMt5LoginListElem `json:"mt5_login_list,omitempty"`

	// Optional field sent in request to map to response, present only when request
	// contains `req_id`.
	ReqId *int `json:"req_id,omitempty"`
}

// Echo of the request made.
type Mt5LoginListRespEchoReq map[string]interface{}

type Mt5LoginListRespMsgType string

const Mt5LoginListRespMsgTypeMt5LoginList Mt5LoginListRespMsgType = "mt5_login_list"

var enumValues_Mt5LoginListRespMsgType = []interface{}{
	"mt5_login_list",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMsgType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMsgType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMsgType, v)
	}
	*j = Mt5LoginListRespMsgType(v)
	return nil
}

type Mt5LoginListRespMt5LoginListElem struct {
	// Account type.
	AccountType *Mt5LoginListRespMt5LoginListElemAccountType `json:"account_type,omitempty"`

	// Balance of the MT5 account.
	Balance *float64 `json:"balance,omitempty"`

	// [Optional] Pertains to client KYC. Returned only if the client fails to meet
	// the requirements, including proof of identity (POI), validity of the tax
	// identification number (TIN), and proof of address (POA).
	ClientKycStatus *Mt5LoginListRespMt5LoginListElemClientKycStatus `json:"client_kyc_status,omitempty"`

	// Residence of the MT5 account.
	Country *string `json:"country,omitempty"`

	// Currency of the MT5 account.
	Currency *string `json:"currency,omitempty"`

	// Account balance, formatted to appropriate decimal places.
	DisplayBalance *string `json:"display_balance,omitempty"`

	// [Optional] Determines the eligibility status for migrating a client account
	// based on verification and account type.
	EligibleToMigrate Mt5LoginListRespMt5LoginListElemEligibleToMigrate `json:"eligible_to_migrate,omitempty"`

	// Email address of the MT5 account.
	Email *string `json:"email,omitempty"`

	// Error in MT5 account details.
	Error *Mt5LoginListRespMt5LoginListElemError `json:"error,omitempty"`

	// Group type of the MT5 account, e.g. `demo\svg_financial`
	Group *string `json:"group,omitempty"`

	// Indicate if the account is a main agent - an IB account
	IsMainAgent *bool `json:"is_main_agent,omitempty"`

	// Broker name
	LandingCompany *string `json:"landing_company,omitempty"`

	// Landing company shortcode of the MT5 account.
	LandingCompanyShort *Mt5LoginListRespMt5LoginListElemLandingCompanyShort `json:"landing_company_short,omitempty"`

	// Leverage of the MT5 account (1 to 1000).
	Leverage *float64 `json:"leverage,omitempty"`

	// Login of MT5 account.
	Login *string `json:"login,omitempty"`

	// Market type
	MarketType *Mt5LoginListRespMt5LoginListElemMarketType `json:"market_type,omitempty"`

	// Name of the owner of the MT5 account.
	Name *string `json:"name,omitempty"`

	// Product name that Deriv offer
	Product *Mt5LoginListRespMt5LoginListElemProduct `json:"product,omitempty"`

	// Timestamp of the latest MT5 request.
	RequestTimestamp *int `json:"request_timestamp,omitempty"`

	// Rights assigned to the MT5 account.
	Rights *Mt5LoginListRespMt5LoginListElemRights `json:"rights,omitempty"`

	// Trade server name of the MT5 account.
	Server *string `json:"server,omitempty"`

	// Trade server information.
	ServerInfo *Mt5LoginListRespMt5LoginListElemServerInfo `json:"server_info,omitempty"`

	// MT5 account status.
	Status *string `json:"status,omitempty"`

	// Sub account category refer to the additional risk management
	SubAccountCategory *Mt5LoginListRespMt5LoginListElemSubAccountCategory `json:"sub_account_category,omitempty"`

	// Sub account type refer to different offerings that we have for mt5
	SubAccountType *Mt5LoginListRespMt5LoginListElemSubAccountType `json:"sub_account_type,omitempty"`

	// MT5 webtrader url for each mt5 platform
	WebtraderUrl *string `json:"webtrader_url,omitempty"`

	// Links to access MT5 application for different platforms.
	WhiteLabelLinks *Mt5LoginListRespMt5LoginListElemWhiteLabelLinks `json:"white_label_links,omitempty"`
}

type Mt5LoginListRespMt5LoginListElemAccountType string

const Mt5LoginListRespMt5LoginListElemAccountTypeDemo Mt5LoginListRespMt5LoginListElemAccountType = "demo"
const Mt5LoginListRespMt5LoginListElemAccountTypeReal Mt5LoginListRespMt5LoginListElemAccountType = "real"

var enumValues_Mt5LoginListRespMt5LoginListElemAccountType = []interface{}{
	"demo",
	"real",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemAccountType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemAccountType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemAccountType, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemAccountType(v)
	return nil
}

// [Optional] Pertains to client KYC. Returned only if the client fails to meet the
// requirements, including proof of identity (POI), validity of the tax
// identification number (TIN), and proof of address (POA).
type Mt5LoginListRespMt5LoginListElemClientKycStatus struct {
	// Status of proof of address (POA).
	PoaStatus *Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus `json:"poa_status,omitempty"`

	// Status of proof of identity (POI).
	PoiStatus *Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus `json:"poi_status,omitempty"`

	// Indicates whether the tax identification number (TIN) is valid (1) or not (0).
	ValidTin *Mt5LoginListRespMt5LoginListElemClientKycStatusValidTin `json:"valid_tin,omitempty"`
}

type Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus string

const Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatusExpired Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus = "expired"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatusNone Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus = "none"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatusPending Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus = "pending"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatusRejected Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus = "rejected"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatusVerified Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus = "verified"

var enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus = []interface{}{
	"none",
	"pending",
	"expired",
	"verified",
	"rejected",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemClientKycStatusPoaStatus(v)
	return nil
}

type Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus string

const Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatusExpired Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus = "expired"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatusNone Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus = "none"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatusPending Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus = "pending"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatusRejected Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus = "rejected"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatusSuspected Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus = "suspected"
const Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatusVerified Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus = "verified"

var enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus = []interface{}{
	"none",
	"pending",
	"verified",
	"suspected",
	"rejected",
	"expired",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemClientKycStatusPoiStatus(v)
	return nil
}

type Mt5LoginListRespMt5LoginListElemClientKycStatusValidTin int

var enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusValidTin = []interface{}{
	1,
	0,
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemClientKycStatusValidTin) UnmarshalJSON(b []byte) error {
	var v int
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusValidTin {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemClientKycStatusValidTin, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemClientKycStatusValidTin(v)
	return nil
}

// [Optional] Determines the eligibility status for migrating a client account
// based on verification and account type.
type Mt5LoginListRespMt5LoginListElemEligibleToMigrate map[string]interface{}

// Error in MT5 account details.
type Mt5LoginListRespMt5LoginListElemError struct {
	// Error code string.
	Code *string `json:"code,omitempty"`

	// Extra information about the error.
	Details *Mt5LoginListRespMt5LoginListElemErrorDetails `json:"details,omitempty"`

	// Error message.
	MessageToClient *string `json:"message_to_client,omitempty"`
}

// Extra information about the error.
type Mt5LoginListRespMt5LoginListElemErrorDetails struct {
	// MT5 account type.
	AccountType *string `json:"account_type,omitempty"`

	// MT5 account login ID.
	Login *string `json:"login,omitempty"`

	// Trade server name of the MT5 account.
	Server *string `json:"server,omitempty"`

	// Trade server information.
	ServerInfo *Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfo `json:"server_info,omitempty"`
}

// Trade server information.
type Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfo struct {
	// The environment. E.g. Deriv-Server.
	Environment *Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment `json:"environment,omitempty"`

	// Geographical location of the server.
	Geolocation *Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoGeolocation `json:"geolocation,omitempty"`

	// Server id.
	Id *string `json:"id,omitempty"`
}

type Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment string

const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivBVIServer Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivBVI-Server"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivBVIServer02 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivBVI-Server-02"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivBVIServer03 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivBVI-Server-03"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivDemo Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "Deriv-Demo"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivFXServer Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivFX-Server"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivFXServer02 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivFX-Server-02"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivFXServer03 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivFX-Server-03"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivMTServer Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivMT-Server"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivMTServer02 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivMT-Server-02"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivMTServer03 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivMT-Server-03"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivMUServer Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivMU-Server"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivMUServer02 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivMU-Server-02"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivMUServer03 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivMU-Server-03"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivSVGServer Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivSVG-Server"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivSVGServer02 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivSVG-Server-02"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivSVGServer03 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivSVG-Server-03"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivServer Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "Deriv-Server"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivServer02 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "Deriv-Server-02"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivServer03 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "Deriv-Server-03"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivVUServer Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivVU-Server"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivVUServer02 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivVU-Server-02"
const Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironmentDerivVUServer03 Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = "DerivVU-Server-03"

var enumValues_Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment = []interface{}{
	"Deriv-Demo",
	"Deriv-Server",
	"Deriv-Server-02",
	"Deriv-Server-03",
	"DerivFX-Server",
	"DerivFX-Server-02",
	"DerivFX-Server-03",
	"DerivVU-Server",
	"DerivVU-Server-02",
	"DerivVU-Server-03",
	"DerivSVG-Server",
	"DerivSVG-Server-02",
	"DerivSVG-Server-03",
	"DerivMT-Server",
	"DerivMT-Server-02",
	"DerivMT-Server-03",
	"DerivBVI-Server",
	"DerivBVI-Server-02",
	"DerivBVI-Server-03",
	"DerivMU-Server",
	"DerivMU-Server-02",
	"DerivMU-Server-03",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoEnvironment(v)
	return nil
}

// Geographical location of the server.
type Mt5LoginListRespMt5LoginListElemErrorDetailsServerInfoGeolocation struct {
	// Internal server grouping.
	Group *string `json:"group,omitempty"`

	// Server location.
	Location *string `json:"location,omitempty"`

	// Server region.
	Region *string `json:"region,omitempty"`

	// Server sequence.
	Sequence *int `json:"sequence,omitempty"`
}

type Mt5LoginListRespMt5LoginListElemLandingCompanyShort string

const Mt5LoginListRespMt5LoginListElemLandingCompanyShortBvi Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "bvi"
const Mt5LoginListRespMt5LoginListElemLandingCompanyShortDml Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "dml"
const Mt5LoginListRespMt5LoginListElemLandingCompanyShortLabuan Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "labuan"
const Mt5LoginListRespMt5LoginListElemLandingCompanyShortMalta Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "malta"
const Mt5LoginListRespMt5LoginListElemLandingCompanyShortMaltainvest Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "maltainvest"
const Mt5LoginListRespMt5LoginListElemLandingCompanyShortSeychelles Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "seychelles"
const Mt5LoginListRespMt5LoginListElemLandingCompanyShortSvg Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "svg"
const Mt5LoginListRespMt5LoginListElemLandingCompanyShortVanuatu Mt5LoginListRespMt5LoginListElemLandingCompanyShort = "vanuatu"

var enumValues_Mt5LoginListRespMt5LoginListElemLandingCompanyShort = []interface{}{
	"bvi",
	"labuan",
	"malta",
	"maltainvest",
	"svg",
	"vanuatu",
	"seychelles",
	"dml",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemLandingCompanyShort) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemLandingCompanyShort {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemLandingCompanyShort, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemLandingCompanyShort(v)
	return nil
}

type Mt5LoginListRespMt5LoginListElemMarketType string

const Mt5LoginListRespMt5LoginListElemMarketTypeAll Mt5LoginListRespMt5LoginListElemMarketType = "all"
const Mt5LoginListRespMt5LoginListElemMarketTypeFinancial Mt5LoginListRespMt5LoginListElemMarketType = "financial"
const Mt5LoginListRespMt5LoginListElemMarketTypeSynthetic Mt5LoginListRespMt5LoginListElemMarketType = "synthetic"

var enumValues_Mt5LoginListRespMt5LoginListElemMarketType = []interface{}{
	"financial",
	"synthetic",
	"all",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemMarketType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemMarketType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemMarketType, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemMarketType(v)
	return nil
}

type Mt5LoginListRespMt5LoginListElemProduct string

const Mt5LoginListRespMt5LoginListElemProductBlank Mt5LoginListRespMt5LoginListElemProduct = ""
const Mt5LoginListRespMt5LoginListElemProductFinancial Mt5LoginListRespMt5LoginListElemProduct = "financial"
const Mt5LoginListRespMt5LoginListElemProductGold Mt5LoginListRespMt5LoginListElemProduct = "gold"
const Mt5LoginListRespMt5LoginListElemProductStandard Mt5LoginListRespMt5LoginListElemProduct = "standard"
const Mt5LoginListRespMt5LoginListElemProductStp Mt5LoginListRespMt5LoginListElemProduct = "stp"
const Mt5LoginListRespMt5LoginListElemProductSwapFree Mt5LoginListRespMt5LoginListElemProduct = "swap_free"
const Mt5LoginListRespMt5LoginListElemProductSynthetic Mt5LoginListRespMt5LoginListElemProduct = "synthetic"
const Mt5LoginListRespMt5LoginListElemProductZeroSpread Mt5LoginListRespMt5LoginListElemProduct = "zero_spread"

var enumValues_Mt5LoginListRespMt5LoginListElemProduct = []interface{}{
	"",
	"synthetic",
	"financial",
	"swap_free",
	"zero_spread",
	"standard",
	"stp",
	"gold",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemProduct) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemProduct {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemProduct, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemProduct(v)
	return nil
}

// Rights assigned to the MT5 account.
type Mt5LoginListRespMt5LoginListElemRights struct {
	// User is allowed to connect via MT5 Web API
	Api *bool `json:"api,omitempty"`

	// This flag is obsolete and not used
	ApiDeprecated *bool `json:"api_deprecated,omitempty"`

	// User's certificate is confirmed
	Confirmed *bool `json:"confirmed,omitempty"`

	// The User is allowed to connect
	Enabled *bool `json:"enabled,omitempty"`

	// User is not allowed to view reports
	ExcludeReports *bool `json:"exclude_reports,omitempty"`

	// User is allowed to use Expert Advisors
	Expert *bool `json:"expert,omitempty"`

	// For internal mt5 usage
	Investor *bool `json:"investor,omitempty"`

	// User is allowed to use OTP
	OtpEnabled *bool `json:"otp_enabled,omitempty"`

	// User is allowed to change password
	PasswordChange *bool `json:"password_change,omitempty"`

	// User has enabled push notifications
	Push *bool `json:"push,omitempty"`

	// Value for internal mt5 usage
	Readonly *bool `json:"readonly,omitempty"`

	// User is allowed to receive daily reports
	Reports *bool `json:"reports,omitempty"`

	// User must change password during next connection
	ResetPass *bool `json:"reset_pass,omitempty"`

	// VPS is enabled for user
	Sponsored *bool `json:"sponsored,omitempty"`

	// User can view technical accounts in manager/admin terminal
	Technical *bool `json:"technical,omitempty"`

	// Trading is disabled for user
	TradeDisabled *bool `json:"trade_disabled,omitempty"`

	// User is allowed to use trailing stops
	Trailing *bool `json:"trailing,omitempty"`
}

// Trade server information.
type Mt5LoginListRespMt5LoginListElemServerInfo struct {
	// The environment. E.g. Deriv-Server.
	Environment *Mt5LoginListRespMt5LoginListElemServerInfoEnvironment `json:"environment,omitempty"`

	// Geographical location of the server.
	Geolocation *Mt5LoginListRespMt5LoginListElemServerInfoGeolocation `json:"geolocation,omitempty"`

	// Server id.
	Id *string `json:"id,omitempty"`
}

type Mt5LoginListRespMt5LoginListElemServerInfoEnvironment string

const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivBVIServer Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivBVI-Server"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivBVIServer02 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivBVI-Server-02"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivBVIServer03 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivBVI-Server-03"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivDemo Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "Deriv-Demo"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivFXServer Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivFX-Server"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivFXServer02 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivFX-Server-02"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivFXServer03 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivFX-Server-03"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivMTServer Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivMT-Server"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivMTServer02 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivMT-Server-02"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivMTServer03 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivMT-Server-03"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivMUServer Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivMU-Server"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivMUServer02 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivMU-Server-02"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivMUServer03 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivMU-Server-03"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivSVGServer Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivSVG-Server"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivSVGServer02 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivSVG-Server-02"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivSVGServer03 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivSVG-Server-03"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivServer Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "Deriv-Server"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivServer02 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "Deriv-Server-02"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivServer03 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "Deriv-Server-03"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivVUServer Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivVU-Server"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivVUServer02 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivVU-Server-02"
const Mt5LoginListRespMt5LoginListElemServerInfoEnvironmentDerivVUServer03 Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = "DerivVU-Server-03"

var enumValues_Mt5LoginListRespMt5LoginListElemServerInfoEnvironment = []interface{}{
	"Deriv-Demo",
	"Deriv-Server",
	"Deriv-Server-02",
	"Deriv-Server-03",
	"DerivFX-Server",
	"DerivFX-Server-02",
	"DerivFX-Server-03",
	"DerivVU-Server",
	"DerivVU-Server-02",
	"DerivVU-Server-03",
	"DerivSVG-Server",
	"DerivSVG-Server-02",
	"DerivSVG-Server-03",
	"DerivMT-Server",
	"DerivMT-Server-02",
	"DerivMT-Server-03",
	"DerivBVI-Server",
	"DerivBVI-Server-02",
	"DerivBVI-Server-03",
	"DerivMU-Server",
	"DerivMU-Server-02",
	"DerivMU-Server-03",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemServerInfoEnvironment) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemServerInfoEnvironment {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemServerInfoEnvironment, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemServerInfoEnvironment(v)
	return nil
}

// Geographical location of the server.
type Mt5LoginListRespMt5LoginListElemServerInfoGeolocation struct {
	// Internal server grouping.
	Group *string `json:"group,omitempty"`

	// Server location.
	Location *string `json:"location,omitempty"`

	// Server region.
	Region *string `json:"region,omitempty"`

	// Server sequence.
	Sequence *int `json:"sequence,omitempty"`
}

type Mt5LoginListRespMt5LoginListElemSubAccountCategory string

const Mt5LoginListRespMt5LoginListElemSubAccountCategoryAb Mt5LoginListRespMt5LoginListElemSubAccountCategory = "ab"
const Mt5LoginListRespMt5LoginListElemSubAccountCategoryBa Mt5LoginListRespMt5LoginListElemSubAccountCategory = "ba"
const Mt5LoginListRespMt5LoginListElemSubAccountCategoryBlank Mt5LoginListRespMt5LoginListElemSubAccountCategory = ""
const Mt5LoginListRespMt5LoginListElemSubAccountCategoryGold Mt5LoginListRespMt5LoginListElemSubAccountCategory = "gold"
const Mt5LoginListRespMt5LoginListElemSubAccountCategoryHr Mt5LoginListRespMt5LoginListElemSubAccountCategory = "hr"
const Mt5LoginListRespMt5LoginListElemSubAccountCategoryLim Mt5LoginListRespMt5LoginListElemSubAccountCategory = "lim"
const Mt5LoginListRespMt5LoginListElemSubAccountCategoryStp Mt5LoginListRespMt5LoginListElemSubAccountCategory = "stp"
const Mt5LoginListRespMt5LoginListElemSubAccountCategorySwapFree Mt5LoginListRespMt5LoginListElemSubAccountCategory = "swap_free"
const Mt5LoginListRespMt5LoginListElemSubAccountCategorySwapFreeHighRisk Mt5LoginListRespMt5LoginListElemSubAccountCategory = "swap_free_high_risk"

var enumValues_Mt5LoginListRespMt5LoginListElemSubAccountCategory = []interface{}{
	"",
	"swap_free",
	"swap_free_high_risk",
	"lim",
	"hr",
	"ab",
	"ba",
	"stp",
	"gold",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemSubAccountCategory) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemSubAccountCategory {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemSubAccountCategory, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemSubAccountCategory(v)
	return nil
}

type Mt5LoginListRespMt5LoginListElemSubAccountType string

const Mt5LoginListRespMt5LoginListElemSubAccountTypeFinancial Mt5LoginListRespMt5LoginListElemSubAccountType = "financial"
const Mt5LoginListRespMt5LoginListElemSubAccountTypeFinancialStp Mt5LoginListRespMt5LoginListElemSubAccountType = "financial_stp"
const Mt5LoginListRespMt5LoginListElemSubAccountTypeGold Mt5LoginListRespMt5LoginListElemSubAccountType = "gold"
const Mt5LoginListRespMt5LoginListElemSubAccountTypeIbt Mt5LoginListRespMt5LoginListElemSubAccountType = "ibt"
const Mt5LoginListRespMt5LoginListElemSubAccountTypeStandard Mt5LoginListRespMt5LoginListElemSubAccountType = "standard"
const Mt5LoginListRespMt5LoginListElemSubAccountTypeStp Mt5LoginListRespMt5LoginListElemSubAccountType = "stp"
const Mt5LoginListRespMt5LoginListElemSubAccountTypeSwapFree Mt5LoginListRespMt5LoginListElemSubAccountType = "swap_free"
const Mt5LoginListRespMt5LoginListElemSubAccountTypeZeroSpread Mt5LoginListRespMt5LoginListElemSubAccountType = "zero_spread"

var enumValues_Mt5LoginListRespMt5LoginListElemSubAccountType = []interface{}{
	"standard",
	"financial",
	"financial_stp",
	"swap_free",
	"ibt",
	"stp",
	"zero_spread",
	"gold",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListRespMt5LoginListElemSubAccountType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_Mt5LoginListRespMt5LoginListElemSubAccountType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_Mt5LoginListRespMt5LoginListElemSubAccountType, v)
	}
	*j = Mt5LoginListRespMt5LoginListElemSubAccountType(v)
	return nil
}

// Links to access MT5 application for different platforms.
type Mt5LoginListRespMt5LoginListElemWhiteLabelLinks struct {
	// Download link for Android.
	Android *string `json:"android,omitempty"`

	// Download link for iOS.
	Ios *string `json:"ios,omitempty"`

	// MT5 webtrader url based on jurisdiction and platform
	WebtraderUrl *string `json:"webtrader_url,omitempty"`

	// Download link for Windows.
	Windows *string `json:"windows,omitempty"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Mt5LoginListResp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if _, ok := raw["echo_req"]; raw != nil && !ok {
		return fmt.Errorf("field echo_req in Mt5LoginListResp: required")
	}
	if _, ok := raw["msg_type"]; raw != nil && !ok {
		return fmt.Errorf("field msg_type in Mt5LoginListResp: required")
	}
	type Plain Mt5LoginListResp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = Mt5LoginListResp(plain)
	return nil
}
