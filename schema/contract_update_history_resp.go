// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "fmt"
import "reflect"
import "encoding/json"

// Contains the changed parameter.
type ContractUpdateHistoryRespContractUpdateHistoryElem struct {
	// Display name of the changed parameter.
	DisplayName *string `json:"display_name,omitempty"`

	// The amount.
	OrderAmount *string `json:"order_amount,omitempty"`

	// The epoch when the changed was done.
	OrderDate *int `json:"order_date,omitempty"`

	// The contract parameter updated.
	OrderType *string `json:"order_type,omitempty"`

	// The pip-sized barrier value.
	Value interface{} `json:"value,omitempty"`
}

// Echo of the request made.
type ContractUpdateHistoryRespEchoReq map[string]interface{}

type ContractUpdateHistoryRespMsgType string

var enumValues_ContractUpdateHistoryRespMsgType = []interface{}{
	"contract_update_history",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *ContractUpdateHistoryRespMsgType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_ContractUpdateHistoryRespMsgType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_ContractUpdateHistoryRespMsgType, v)
	}
	*j = ContractUpdateHistoryRespMsgType(v)
	return nil
}

// Contract update history status
type ContractUpdateHistoryResp struct {
	// Contains the historical and the most recent update status of the contract
	ContractUpdateHistory []ContractUpdateHistoryRespContractUpdateHistoryElem `json:"contract_update_history,omitempty"`

	// Echo of the request made.
	EchoReq ContractUpdateHistoryRespEchoReq `json:"echo_req"`

	// Action name of the request made.
	MsgType ContractUpdateHistoryRespMsgType `json:"msg_type"`

	// Optional field sent in request to map to response, present only when request
	// contains `req_id`.
	ReqId *int `json:"req_id,omitempty"`
}

const ContractUpdateHistoryRespMsgTypeContractUpdateHistory ContractUpdateHistoryRespMsgType = "contract_update_history"

// UnmarshalJSON implements json.Unmarshaler.
func (j *ContractUpdateHistoryResp) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["echo_req"]; !ok || v == nil {
		return fmt.Errorf("field echo_req: required")
	}
	if v, ok := raw["msg_type"]; !ok || v == nil {
		return fmt.Errorf("field msg_type: required")
	}
	type Plain ContractUpdateHistoryResp
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = ContractUpdateHistoryResp(plain)
	return nil
}
