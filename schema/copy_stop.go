// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"

// Stop copy trader bets
type CopyStop struct {
	// API tokens identifying the accounts which needs not to be copied
	CopyStop string `json:"copy_stop"`

	// [Optional] The login id of the user. If left unspecified, it defaults to the
	// initial authorized token's login id.
	Loginid *string `json:"loginid,omitempty"`

	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field.
	Passthrough CopyStopPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field.
type CopyStopPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *CopyStop) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["copy_stop"]; !ok || v == nil {
		return fmt.Errorf("field copy_stop in CopyStop: required")
	}
	type Plain CopyStop
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = CopyStop(plain)
	return nil
}
