// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"

// To get the information of the OAuth application specified by 'app_id'
type AppGet struct {
	// Application app_id
	AppGet int `json:"app_get"`

	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field. Maximum size is 3500 bytes.
	Passthrough AppGetPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field. Maximum size is 3500 bytes.
type AppGetPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *AppGet) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["app_get"]; !ok || v == nil {
		return fmt.Errorf("field app_get in AppGet: required")
	}
	type Plain AppGet
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = AppGet(plain)
	return nil
}
