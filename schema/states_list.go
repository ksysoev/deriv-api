// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package schema

import "encoding/json"
import "fmt"

// For a given country, returns a list of States of that country. This is useful to
// populate the account opening form.
type StatesList struct {
	// [Optional] Used to pass data through the websocket, which may be retrieved via
	// the `echo_req` output field. Maximum size is 3500 bytes.
	Passthrough StatesListPassthrough `json:"passthrough,omitempty"`

	// [Optional] Used to map request to response.
	ReqId *int `json:"req_id,omitempty"`

	// Client's 2-letter country code (obtained from `residence_list` call)
	StatesList string `json:"states_list"`
}

// [Optional] Used to pass data through the websocket, which may be retrieved via
// the `echo_req` output field. Maximum size is 3500 bytes.
type StatesListPassthrough map[string]interface{}

// UnmarshalJSON implements json.Unmarshaler.
func (j *StatesList) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["states_list"]; !ok || v == nil {
		return fmt.Errorf("field states_list in StatesList: required")
	}
	type Plain StatesList
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = StatesList(plain)
	return nil
}
